# Created by .ignore support plugin (hsz.mobi)
### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env

# virtualenv
venv/
ENV/

# Spyder project settings
.spyderproject

# Rope project settings
.ropeproject
### VirtualEnv template
# Virtualenv
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
.venv
pip-selfcheck.json

### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# AWS User-specific
.idea/**/aws.xml

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# SonarLint plugin
.idea/sonarlint/

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

# idea folder, uncomment if you don't need it
.idea
/vacancies.csv
/vacancies_big.csv
/vacancies_by_year.csv
/vacancies_medium.csv
/хуждожественный фильм - snatch/
/test.csv
/1.5 Elements of a functional programming/test.py
/1.4 Procedural programming. Concept of a function. Built-in library/test_pretty_table.py
/2.1 Libraries/snatch/
/2.3 IDE. Debugger. Testing. Documentation/report.pdf
/2.3 IDE. Debugger. Testing. Documentation/img.png
/2.3 IDE. Debugger. Testing. Documentation/img_1.png
/2.3 IDE. Debugger. Testing. Documentation/Profiling.py.pclprof
/2.3 IDE. Debugger. Testing. Documentation/report.xlsx
/2.3 IDE. Debugger. Testing. Documentation/graph.png
/2.3 IDE. Debugger. Testing. Documentation/docrunner.py.pclprof
/3.2 Data sources/report.pdf
/3.2 Data sources/csvs_by_years/vacancies_by_2007.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2008.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2009.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2010.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2011.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2012.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2013.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2014.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2015.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2016.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2017.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2018.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2019.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2020.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2021.csv
/3.2 Data sources/csvs_by_years/vacancies_by_2022.csv
/3.2 Data sources/img.png
/3.2 Data sources/graph.png
/3.2 Data sources/report.xlsx
/3.2 Data sources/csvs_by_years/2007/
/3.2 Data sources/csvs_by_years/2008/
/3.2 Data sources/csvs_by_years/2009/
/3.2 Data sources/csvs_by_years/2010/
/3.2 Data sources/csvs_by_years/2011/
/3.2 Data sources/csvs_by_years/2012/
/3.2 Data sources/csvs_by_years/2013/
/3.2 Data sources/csvs_by_years/2014/
/3.2 Data sources/csvs_by_years/2015/
/3.2 Data sources/csvs_by_years/2016/
/3.2 Data sources/csvs_by_years/2017/
/3.2 Data sources/csvs_by_years/2018/
/3.2 Data sources/csvs_by_years/2019/
/3.2 Data sources/csvs_by_years/2020/
/3.2 Data sources/csvs_by_years/2021/
/3.2 Data sources/csvs_by_years/2022/
/3.2 Data sources/img_1.png
/3.2 Data sources/img_2.png
/3.2 Data sources/img_3.png
/3.2 Data sources/Multiprocessingovoe.py.pclprof
/3.2 Data sources/Concurrent futures.py.pclprof
/vacancies_dif_currencies.csv
/3.3 API/test.py
/3.3 API/csvs_by_years/
/3.3 API/testoviy.csv
/3.3 API/t.py
/3.3 API/proverka.csv
/3.3 API/vacancies_joined_salary.csv
/3.3 API/hh_ru.csv
/3.4 Pandas/vacancies_dif_currencies.csv
/3.4 Pandas/vacancies_joined_salary.csv
